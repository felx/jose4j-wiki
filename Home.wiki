= Welcome to jose.4.j!=

The jose.4.j library is an [[https://bitbucket.org/b_c/jose4j/src/4f10a2684a7d0285da5826037ad48852ecf4485f/LICENSE?at=master|Apache 2 licensed]] open source implementation of the JOSE specification suite (which can be used for JWT). It is written in Java and relies solely on the JCA APIs for cryptography.

JOSE is short for Javascript Object Signing and Encryption, which is the IETF Working Group developing the [[http://tools.ietf.org/html/draft-ietf-jose-json-web-signature|JSON Web Signature]] (JWS), [[http://tools.ietf.org/html/draft-ietf-jose-json-web-encryption|JSON Web Encryption]] (JWE) and [[http://tools.ietf.org/html/draft-ietf-jose-json-web-key|JSON Web Key]] (JWK) specifications. JWS and JWE use JSON and base64url encoding to secure messages in a (relatively) simple, compact and web safe format while JWK defines a JSON representation of cryptographic keys. The actual algorithms for JWS, JWE and JWK are defined in [[http://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms|JSON Web Algorithms]] (JWA).


The library supports the JWS/JWE compact serializations with the complete suite of JOSE algorithms. A more detailed breakdown is available below in the Algorithm Support section.

== Code Examples ==
jose.4.j is (hopefully) very easy to use and, to help get started, some code examples are provided demonstrating some common things you might want to do with it.

The [[JWS%20Examples|JWS Examples]] show how to easily apply and verify signatures.

The [[JWE%20Examples|JWE Examples]] show how to encrypt and decrypt messages.

== Dependencies ==
The jose.4.j library relies on Codec and Logging from [[http://commons.apache.org/|Apache Commons]] as well as [[https://code.google.com/p/json-simple/|JSON-Simple]]. Attempts have been made to keep the dependencies list as short as possible but it seemed like a bad idea to try and write a base 64 encoder, a logging framework and a JSON parser when so many good implementations of those things already exist. 

The dependencies are also listed in the pom.xml file in the [[https://bitbucket.org/b_c/jose4j/src|source]] and Maven should just handle them for you, if you build from source.

Someday I'll figure out how get it into the central maven repo.

== Release Notes == 
These very rough [[Release%20Notes|Release Notes]] capture some of the high level milestones.
 
== Algorithm Support == 
\\
**JWS**
|= Digital Signature or MAC Algorithm|= JWS "alg" Parameter Value|
|HMAC with SHA-2 Function |HS256, HS384 and HS512|
|RSASSA-PKCS1-V1_5 Digital Signatures|RS256, RS384 and RS512|
|Elliptic Curve Digital Signatures (ECDSA)|ES256, ES384 and ES512|
|RSASSA-PSS Digital Signatures |PS256†, PS384† and PS512†|
|Unsigned Plaintext|none|


\\
**JWE Key Encryption and Key Agreement**
|= Key Management Algorithm|= JWE "alg" Parameter Value|
|Direct encryption with a shared symmetric key| dir|
|RSAES-PKCS1-V1_5 key encryption|RSA1_5|
|RSAES using OAEP key encryption|RSA-OAEP|
|AES key wrap|A128KW, A192KW* and A256KW*|
|AES GCM key encryption|A128GCMKW‡, A192GCMKW*‡ and A256GCMKW*‡|
|Elliptic Curve Diffie-Hellman Ephemeral Static key agreement using Concat KDF|ECDH-ES|
|Elliptic Curve Diffie-Hellman Ephemeral Static key agreement using Concat KDF with AES key wrap|ECDH-ES+A128KW, ECDH-ES+A192KW*, ECDH-ES+A256KW*|
|PBES2 with HMAC SHA-2 and AES key wrapping| PBES2-HS256+A128KW, PBES2-HS384+A192KW* and PBES2-HS512+A256KW*|

\\
**JWE Content Encryption**
|= Content Encryption Algorithm|= JWE "enc" Parameter Value|
|Authenticated encryption with AES-CBC and HMAC-SHA2|A128CBC-HS256, A192CBC-HS384* and A256CBC-HS512*|
|Authenticated encryption with Advanced Encryption Standard (AES) in Galois/Counter Mode (GCM)|A128GCM‡, A192GCM*‡ and A256GCM*‡| 

\\
**JWE Compression**
|= Compression Algorithm|= JWE "zip" Parameter Value|
|DEFLATE Compressed Data Format from RFC 1951|DEF|

\\
**JWK**
|= Key Type|= JWK "kty" Parameter Value|
|Elliptic Curve Public/Private Keys|EC|
|RSA Public/Private Keys|RSA|
|Symmetric Keys (Octet sequence)|oct|

 
\\* Requires the JCE's Unlimited Strength Jurisdiction Policy Files be installed for the JRE (download for [[http://www.oracle.com/technetwork/java/javase/downloads/jce-7-download-432124.html|Java 7]] and [[http://www.oracle.com/technetwork/java/javase/downloads/jce8-download-2133166.html|Java 8]]).
\\† Requires the [[https://www.bouncycastle.org/java.html|Bouncy Castle]] JCA provider (or another provider which supports RSASSA-PSS) 
\\‡ Requires Java 8 or the [[https://www.bouncycastle.org/java.html|Bouncy Castle]] v1.50+ JCA provider (or another provider which supports AEAD ciphers though the JCA interface including recognizing GCMParameterSpec)